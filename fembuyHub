local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Fembuy Hub",
   Icon = 93059603763570,
   LoadingTitle = "Loading Hub",
   LoadingSubtitle = "by Manuel",
   Theme = "Default",
   ToggleUIKeybind = "K",
   ConfigurationSaving = {
      Enabled = true,
      FileName = "Fembuy Hub"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink",
      RememberJoins = true
   },
   KeySystem = true,
   KeySettings = {
      Title = "Fembuy Hub",
      Subtitle = "Enter the key to proceed",
      Note = "Ask Manuel",
      FileName = "Key",
      SaveKey = true,
      Key = {"ilovefemboys"}
   }
})

Rayfield:Notify({
   Title = "Successful Execution",
   Content = "Fembuy Hub has loaded correctly.",
   Duration = 6.5,
   Image = 4483362458,
})

local Players = game:GetService("Players")
local localPlayer = Players.LocalPlayer

-- Toggles state
local toggles = {
   InfYield = false,
   Invis = false,
   Phantasm = false,
   TSBExtra = false,
   Garden = false,
   HighlightToggle = false,
}

local cachedPositions = {}

-- ======= Highlight Function =======
local function toggleHighlight(enable)
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= localPlayer and player.Character then
            local highlight = player.Character:FindFirstChild("ESPBox")
            if enable then
                if not highlight then
                    highlight = Instance.new("Highlight")
                    highlight.Name = "ESPBox"
                    highlight.FillColor = Color3.fromRGB(255, 0, 255)
                    highlight.FillTransparency = 0.6
                    highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
                    highlight.OutlineTransparency = 0
                    highlight.Adornee = player.Character
                    highlight.Parent = player.Character
                end
            else
                if highlight then
                    highlight:Destroy()
                end
            end
        end
    end
end

-- ======= Kill All Players =======
local function killAllPlayers()
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= localPlayer and player.Character and player.Character:FindFirstChild("Humanoid") then
            player.Character.Humanoid:TakeDamage(9999)
        end
    end
end

-- ======= Teleport All to You (cache original positions) =======
local function teleportAllToMe()
    local root = localPlayer.Character and localPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not root then
        Rayfield:Notify({
            Title = "Error",
            Content = "Your character or HumanoidRootPart not found!",
            Duration = 5
        })
        return
    end

    cachedPositions = {} -- clear old cache

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= localPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local humRoot = player.Character.HumanoidRootPart
            cachedPositions[player.Name] = humRoot.CFrame -- store original position

            -- teleport slightly above you to avoid clipping
            humRoot.CFrame = root.CFrame + Vector3.new(0, 5, 0)
        end
    end

    Rayfield:Notify({
        Title = "Teleport Complete",
        Content = "All players teleported to you and their original positions cached.",
        Duration = 5
    })
end

-- ======= Speed Input (textbox) =======
local currentSpeed = 16

local function updateWalkSpeed(speed)
    if typeof(speed) ~= "number" then return end
    currentSpeed = speed

    local function applySpeed(character)
        local humanoid = character:FindFirstChild("Humanoid")
        if humanoid then
            humanoid.WalkSpeed = speed
        end
    end

    if localPlayer.Character then
        applySpeed(localPlayer.Character)
    end

    -- Apply on respawn
    localPlayer.CharacterAdded:Connect(function(character)
        character:WaitForChild("Humanoid").WalkSpeed = speed
    end)
end

updateWalkSpeed(currentSpeed)

-- ======= Player Size Slider =======
local function setPlayerSize(size)
    if localPlayer.Character then
        for _, part in pairs(localPlayer.Character:GetChildren()) do
            if part:IsA("BasePart") then
                part.Size = part.Size.Unit * size
            end
        end
    end
end

-- Some players may have accessories that won't scale properly, this is a basic approach.

-- ===== Tabs =====

-- Home Tab
local HomeTab = Window:CreateTab("Home", 17205450457)

HomeTab:CreateButton({
   Name = "Infinite Yield",
   Callback = function()
      if not toggles.InfYield then
         toggles.InfYield = true
         getgenv().infYield = loadstring(game:HttpGet("https://cdn.wearedevs.net/scripts/Infinite%20Yield.txt"))()
      else
         Rayfield:Notify({
            Title = "Already Loaded",
            Content = "Rejoin to disable Infinite Yield.",
            Duration = 4
         })
      end
   end,
})

-- Player Tab
local PlayerTab = Window:CreateTab("Player", 17205450457)

PlayerTab:CreateButton({
   Name = "Invisible Script",
   Callback = function()
      if not toggles.Invis then
         toggles.Invis = true
         loadstring(game:HttpGet('https://pastebin.com/raw/3Rnd9rHf'))()
      end
   end,
})

PlayerTab:CreateInput({
   Name = "Set Walk Speed",
   PlaceholderText = "Type speed here (e.g. 50)",
   RemoveTextAfterFocusLost = false,
   Callback = function(text)
       local speedNum = tonumber(text)
       if speedNum then
          updateWalkSpeed(speedNum)
          Rayfield:Notify({
              Title = "Speed Updated",
              Content = "Your walk speed is now "..speedNum,
              Duration = 4
          })
       else
          Rayfield:Notify({
              Title = "Invalid Input",
              Content = "Please enter a valid number for speed!",
              Duration = 4
          })
       end
   end
})

PlayerTab:CreateSlider({
   Name = "Player Size",
   Range = {0.5, 5},
   Increment = 0.1,
   Suffix = "x",
   CurrentValue = 1,
   Callback = function(value)
       -- Scale character parts
       if localPlayer.Character then
           for _, part in pairs(localPlayer.Character:GetChildren()) do
               if part:IsA("BasePart") then
                   part.Size = part.Size.Unit * value
               end
           end
       end
   end,
})

PlayerTab:CreateButton({
   Name = "Teleport Everyone To Me (Cache Positions)",
   Callback = function()
       teleportAllToMe()
   end,
})

-- TSB Tab
local TSBTab = Window:CreateTab("TSB", 17205450457)

TSBTab:CreateButton({
   Name = "Phantasm Hub",
   Callback = function()
      if not toggles.Phantasm then
         toggles.Phantasm = true
         loadstring(game:HttpGet("https://raw.githubusercontent.com/ATrainz/Phantasm/main/Games/TSB.lua"))()
      end
   end,
})

TSBTab:CreateButton({
   Name = "Extra TSB Script",
   Callback = function()
      if not toggles.TSBExtra then
         toggles.TSBExtra = true
         loadstring(game:HttpGet("https://raw.githubusercontent.com/ATrainz/Phantasm/main/Games/TSB.lua"))()
      end
   end,
})

TSBTab:CreateToggle({
   Name = "Highlight All Players",
   CurrentValue = false,
   Flag = "HighlightToggle",
   Callback = function(value)
      toggles.HighlightToggle = value
      toggleHighlight(value)
      Rayfield:Notify({
         Title = value and "ESP Enabled" or "ESP Disabled",
         Content = value and "All players now highlighted." or "Highlight removed.",
         Duration = 4
      })
   end,
})

-- Garden Tab
local GardenTab = Window:CreateTab("Grow a Garden", 17205450457)

GardenTab:CreateButton({
   Name = "Garden Script",
   Callback = function()
      if not toggles.Garden then
         toggles.Garden = true
         loadstring(game:HttpGet("https://raw.githubusercontent.com/tesghg/Grow-a-Garden/main/ameicaa_Grow_A_Garden.lua"))()
      end
   end,
})

-- Troll Tab
local TrollTab = Window:CreateTab("Troll", 17205450457)

TrollTab:CreateButton({
   Name = "Kill All Players",
   Callback = function()
      killAllPlayers()
      Rayfield:Notify({
         Title = "Attack Complete",
         Content = "Tried to kill all players!",
         Duration = 5
      })
   end,
})
